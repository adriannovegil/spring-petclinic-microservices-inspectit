version: '3.3'
services:

  # InspectIT
  # ============================================================================
  # Agent
  agent:
    build: ./agent
    image: inspectit/inspectit-agent
    container_name: inspectit-agent
    volumes:
      - agent-vol:/agent

  # Config server
  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:${INSPECTIT_OCELOT_VERSION}
    container_name: ocelot-config-server
    environment:
      - INSPECTIT_CONFIG_SERVER_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_CONFIG_SERVER_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./configuration-server:/configuration-server
    ports:
      - 8090:8090

  # Infrastructure
  # ============================================================================
  # Config server
  config-server:
    image: inspectit/spring-petclinic-config-server
    container_name: inspectit-config-server
    environment:
      - INSPECTIT_SERVICE_NAME=config-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9096
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - agent
      - ocelot-config-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8888:8888
      - 9096:9096

  # Discovery service
  discovery-server:
    image: inspectit/spring-petclinic-discovery-server
    container_name: inspectit-discovery-server
    environment:
      - INSPECTIT_SERVICE_NAME=discovery-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9095
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - config-server
      - ocelot-config-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8761:8761
      - 9095:9095

  # Services
  # ============================================================================
  # Customers service
  customers-service:
    image: inspectit/spring-petclinic-customers-service
    container_name: inspectit-customers-service
    environment:
      - INSPECTIT_SERVICE_NAME=customers-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9091
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8081:8081
      - 9091:9091

  # Visits service
  visits-service:
    image: inspectit/spring-petclinic-visits-service
    container_name: inspectit-visits-service
    environment:
      - INSPECTIT_SERVICE_NAME=visits-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9092
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8082:8082
      - 9092:9092

  #Vets service
  vets-service:
    image: inspectit/spring-petclinic-vets-service
    container_name: inspectit-vets-service
    environment:
      - INSPECTIT_SERVICE_NAME=vets-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9093
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8083:8083
      - 9093:9093

  # API gateway
  api-gateway:
    image: inspectit/spring-petclinic-api-gateway
    container_name: inspectit-api-gateway
    environment:
      - INSPECTIT_SERVICE_NAME=api-gateway
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9094
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8080:8080
      - 9094:9094

  # Admin Server
  # ============================================================================
  admin-server:
    image: inspectit/spring-petclinic-admin-server
    container_name: inspectit-admin-server
    environment:
      - INSPECTIT_SERVICE_NAME=admin-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9097
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
     - config-server
     - ocelot-config-server
     - discovery-server
     - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
     - 9090:9090
     - 9097:9097

  # Circuit breaker
  # ============================================================================
  hystrix-dashboard:
    image: inspectit/spring-petclinic-hystrix-dashboard
    container_name: inspectit-hystrix-dashboard
    environment:
      - INSPECTIT_SERVICE_NAME=hystrix-dashboard
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9098
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger-server:14268/api/traces
    depends_on:
     - config-server
     - ocelot-config-server
     - discovery-server
     - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888  \
                  -wait=tcp://ocelot-config-server:8888 \
                  -wait=tcp://prometheus-server:9090 \
                  -wait=tcp://jaeger-server:16686  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
     - 7979:7979
     - 9098:9098

  # Metrics
  # ============================================================================
  # Prometheus
  prometheus-server:
    image: prom/prometheus:v2.7.1
    container_name: prometheus
    volumes:
      - ./prometheus-server/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  # Grafana
  grafana-server:
    build: ./grafana-server
    image: inspectit/inspectit-grafana-server
    container_name: inspectit-grafana-server
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=demo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
    volumes:
      - ./grafana-server/provisioning:/usr/share/grafana/custom/
    depends_on:
      - influxdb-server
    ports:
      - 3000:3000

  # Trazing
  # ============================================================================
  # Jaeger
  jaeger-server:
    image: jaegertracing/all-in-one:1.6
    container_name: jaeger
    ports:
      - 16686:16686

  # Load
  # ============================================================================
  # Load server
  load-server:
    build: ./load-server
    image: inspectit/load-server
    container_name: inspectit-load-server
    depends_on:
      - api-gateway
      - customers-service
      - visits-service
      - vets-service

volumes:
  agent-vol:
